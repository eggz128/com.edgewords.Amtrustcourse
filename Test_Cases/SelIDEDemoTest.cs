// Generated by Selenium IDE
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Threading;
using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Firefox;
using OpenQA.Selenium.Remote;
using OpenQA.Selenium.Support.UI;
using OpenQA.Selenium.Interactions;
using NUnit.Framework;
using com.edgewords.Amtrustcourse.Base_Classes;
using static com.edgewords.Amtrustcourse.Helpers.Helper_Library;
using System.IO;
using System.Reflection;
using LumenWorks.Framework.IO.Csv;
using com.edgewords.Amtrustcourse.POM_Pages;
using static com.edgewords.Amtrustcourse.Helpers.Globals;

namespace com.edgewords.Amtrustcourse.Test_Cases
{
    [TestFixture]
    public class SelIDEDemoTest : Base_Classes.TestBaseClass
    {
        
       // A comment
       //Another comment to test CI

        [Test , TestCaseSource(typeof (Helpers.Helper_Library), "GetTestData"), Category("Web"), Order(2)]
        public void selIDEDemo(string username, string password )
        {

            string runsettings = TestContext.Parameters["runsettingsparam"];
            Console.WriteLine("The parameter value was: " + runsettings);

            string envvar = Environment.GetEnvironmentVariable("MyEnvVar");
            Console.WriteLine("The envvar was: " + envvar);


            // Test name: SelIDEDemo
            // Step # | name | target | value
            // 1 | open | /webdriver2/ | 
            driver.Navigate().GoToUrl(BASE_URL);
            // 2 | setWindowSize | 1136x1031 | 
            //driver.Manage().Window.Size = new System.Drawing.Size(1136, 1031);

            // 3 | click | css=li:nth-child(1) span | 
            //driver.FindElement(By.CssSelector("li:nth-child(1) span")).Click();

            HomePage home = new HomePage(driver);
            home.GoLogin();

            //On login page
            LoginPage login = new LoginPage(driver);
            //login.SetUsername(username).SetPassword(password);



            login.Login(username, password);


            //IWebElement theusername = WaitForElement(driver, By.Id("username"), 2);
            //Console.WriteLine("Now on login page");

            //// 4 | click | id=username | 
            //theusername.Click();
            //// 5 | type | id=username | edgewords



            //theusername.SendKeys(username);
            //// 6 | click | id=password | 
            //driver.FindElement(By.Id("password")).Click();
            //// 7 | type | id=password | edgewords123




            //driver.FindElement(By.Id("password")).SendKeys(password);
            //// 8 | click | linkText=Submit | 
            //driver.FindElement(By.LinkText("Submit")).Click();
            // 9 | waitForElementPresent | id=name | 10000

            //Original wait
            //{
            //    WebDriverWait wait = new WebDriverWait(driver, TimeSpan.FromSeconds(10));
            //    wait.Until(driver => driver.FindElements(By.Id("name")).Count > 0);
            //}

            //Use the helper wait
            WaitForElement(driver, By.Id("name"), 5);

            // 10 | assertText | css=body | User is Logged in\nAdd Record\nEdit Record\nRemove Record\nList Records\nLog Out\nAdd A Record To the Database\nAdd\nName?\nUserName?\nPin?\nPassword?\nSubmit Clear\nÂ©2014 Edgewords Limited
            Assert.That(driver.FindElement(By.CssSelector("body")).Text, Does.Contain("User is Logged in"));
            // 12 | click | css=.last span | 
            driver.FindElement(By.CssSelector(".last span")).Click();

            AcceptAlert(driver);

            WaitForElement(driver, By.Id("username"), 10);

            TakeScreenshot(driver, "loginscreen");
            IWebElement access = driver.FindElement(By.CssSelector("#right-column"));
            TakeScreenshotOfElement(access, "partofpage");
            
            Console.WriteLine("Back on  login page");

            TestContext.WriteLine("This is a line from TestContext");
            TestContext.AddTestAttachment(@"C:\Users\edgewords\Pictures\amtrust\partofpage.png");


        }


        

    }
}